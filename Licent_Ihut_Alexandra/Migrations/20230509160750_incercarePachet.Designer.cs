// <auto-generated />
using System;
using Licent_Ihut_Alexandra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licent_Ihut_Alexandra.Migrations
{
    [DbContext(typeof(Licent_Ihut_AlexandraContext))]
    [Migration("20230509160750_incercarePachet")]
    partial class incercarePachet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Artist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CategorieMomentArtistic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Culoare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CuloareName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Culoare");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Decoratiune", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Companie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locație")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("MembruID");

                    b.ToTable("Decoratiune");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Fotograf", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("Fotograf");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.GenMuzical", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("GenMuzicalNume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GenMuzical");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Hostes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("Hostes");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.HostesCuloare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CuloareID")
                        .HasColumnType("int");

                    b.Property<int>("HostesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CuloareID");

                    b.HasIndex("HostesID");

                    b.ToTable("HostesCuloare");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Judet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Judet");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Localitate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<string>("NumeLocalitate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.ToTable("Localitate");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.MaterialPirotehnic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("MaterialPirotehnic");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Membru", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserSauPrestatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserSauPrestatorID");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.PachetulMeu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int?>("DecoratiuneID")
                        .HasColumnType("int");

                    b.Property<int?>("FotografID")
                        .HasColumnType("int");

                    b.Property<int?>("HostesID")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialPirotehnicID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<int?>("PrajituraID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaEvenimentID")
                        .HasColumnType("int");

                    b.Property<int?>("SonorizareID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ArtistID");

                    b.HasIndex("DecoratiuneID");

                    b.HasIndex("FotografID");

                    b.HasIndex("HostesID");

                    b.HasIndex("MaterialPirotehnicID");

                    b.HasIndex("MembruID");

                    b.HasIndex("PrajituraID");

                    b.HasIndex("SalaEvenimentID");

                    b.HasIndex("SonorizareID");

                    b.ToTable("PachetulMeu");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Prajitura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Creme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriere")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Feluri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Figurina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("Prajitura");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SalaEveniment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Capacitate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JudetID")
                        .HasColumnType("int");

                    b.Property<int?>("LocalitateID")
                        .HasColumnType("int");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("JudetID");

                    b.HasIndex("LocalitateID");

                    b.HasIndex("MembruID");

                    b.ToTable("SalaEveniment");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SalaEvenimentAles", b =>
                {
                    b.Property<int>("MembruID")
                        .HasColumnType("int");

                    b.Property<int>("SalaEvenimentID")
                        .HasColumnType("int");

                    b.HasKey("MembruID", "SalaEvenimentID");

                    b.HasIndex("SalaEvenimentID");

                    b.ToTable("SalaEvenimentAles");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Sonorizare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("MembruID")
                        .HasColumnType("int");

                    b.Property<string>("Numar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MembruID");

                    b.ToTable("Sonorizare");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SonorizareGenMuzical", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("GenMuzicalID")
                        .HasColumnType("int");

                    b.Property<int>("SonorizareID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GenMuzicalID");

                    b.HasIndex("SonorizareID");

                    b.ToTable("SonorizareGenMuzical");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.UserSauPrestator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserSauPrestator");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Artist", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("Artisti")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("Artisti")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Artisti")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Decoratiune", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Material", "Material")
                        .WithMany("Decoratiune")
                        .HasForeignKey("MaterialID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Decoratiuni")
                        .HasForeignKey("MembruID");

                    b.Navigation("Material");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Fotograf", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("Fotografi")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("Fotografi")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Fotografi")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Hostes", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("Hostess")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("Hostess")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Hostess")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.HostesCuloare", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Culoare", "Culoare")
                        .WithMany("HostesCulori")
                        .HasForeignKey("CuloareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licent_Ihut_Alexandra.Models.Hostes", "Hostes")
                        .WithMany("HostesCulori")
                        .HasForeignKey("HostesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culoare");

                    b.Navigation("Hostes");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Localitate", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("Localitati")
                        .HasForeignKey("JudetID");

                    b.Navigation("Judet");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.MaterialPirotehnic", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("MaterialePirotehnice")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("MaterialePirotehnice")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("MaterialePirotehnice")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Membru", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.UserSauPrestator", "UserSauPrestator")
                        .WithMany("Membri")
                        .HasForeignKey("UserSauPrestatorID");

                    b.Navigation("UserSauPrestator");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.PachetulMeu", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Artist", "Artist")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("ArtistID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Decoratiune", "Decoratiune")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("DecoratiuneID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Fotograf", "Fotograf")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("FotografID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Hostes", "Hostes")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("HostesID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.MaterialPirotehnic", "MaterialPirotehnic")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("MaterialPirotehnicID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("MembruID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Prajitura", "Prajitura")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("PrajituraID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.SalaEveniment", "SalaEveniment")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("SalaEvenimentID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Sonorizare", "Sonorizare")
                        .WithMany("PacheteleMele")
                        .HasForeignKey("SonorizareID");

                    b.Navigation("Artist");

                    b.Navigation("Decoratiune");

                    b.Navigation("Fotograf");

                    b.Navigation("Hostes");

                    b.Navigation("MaterialPirotehnic");

                    b.Navigation("Membru");

                    b.Navigation("Prajitura");

                    b.Navigation("SalaEveniment");

                    b.Navigation("Sonorizare");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Prajitura", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("Prajituri")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("Prajituri")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Prajituri")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SalaEveniment", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Judet", "Judet")
                        .WithMany("SaliEvenimente")
                        .HasForeignKey("JudetID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Localitate", "Localitate")
                        .WithMany("SaliEvenimente")
                        .HasForeignKey("LocalitateID");

                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("SaliEvenimente")
                        .HasForeignKey("MembruID");

                    b.Navigation("Judet");

                    b.Navigation("Localitate");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SalaEvenimentAles", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany()
                        .HasForeignKey("MembruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licent_Ihut_Alexandra.Models.SalaEveniment", "SalaEveniment")
                        .WithMany()
                        .HasForeignKey("SalaEvenimentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membru");

                    b.Navigation("SalaEveniment");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Sonorizare", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.Membru", "Membru")
                        .WithMany("Sonorizari")
                        .HasForeignKey("MembruID");

                    b.Navigation("Membru");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SonorizareGenMuzical", b =>
                {
                    b.HasOne("Licent_Ihut_Alexandra.Models.GenMuzical", "GenMuzical")
                        .WithMany("SonorizareGenuriMuzicale")
                        .HasForeignKey("GenMuzicalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licent_Ihut_Alexandra.Models.Sonorizare", "Sonorizare")
                        .WithMany("SonorizareGenuriMuzicale")
                        .HasForeignKey("SonorizareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenMuzical");

                    b.Navigation("Sonorizare");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Artist", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Culoare", b =>
                {
                    b.Navigation("HostesCulori");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Decoratiune", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Fotograf", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.GenMuzical", b =>
                {
                    b.Navigation("SonorizareGenuriMuzicale");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Hostes", b =>
                {
                    b.Navigation("HostesCulori");

                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Judet", b =>
                {
                    b.Navigation("Artisti");

                    b.Navigation("Fotografi");

                    b.Navigation("Hostess");

                    b.Navigation("Localitati");

                    b.Navigation("MaterialePirotehnice");

                    b.Navigation("Prajituri");

                    b.Navigation("SaliEvenimente");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Localitate", b =>
                {
                    b.Navigation("Artisti");

                    b.Navigation("Fotografi");

                    b.Navigation("Hostess");

                    b.Navigation("MaterialePirotehnice");

                    b.Navigation("Prajituri");

                    b.Navigation("SaliEvenimente");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Material", b =>
                {
                    b.Navigation("Decoratiune");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.MaterialPirotehnic", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Membru", b =>
                {
                    b.Navigation("Artisti");

                    b.Navigation("Decoratiuni");

                    b.Navigation("Fotografi");

                    b.Navigation("Hostess");

                    b.Navigation("MaterialePirotehnice");

                    b.Navigation("PacheteleMele");

                    b.Navigation("Prajituri");

                    b.Navigation("SaliEvenimente");

                    b.Navigation("Sonorizari");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Prajitura", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.SalaEveniment", b =>
                {
                    b.Navigation("PacheteleMele");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.Sonorizare", b =>
                {
                    b.Navigation("PacheteleMele");

                    b.Navigation("SonorizareGenuriMuzicale");
                });

            modelBuilder.Entity("Licent_Ihut_Alexandra.Models.UserSauPrestator", b =>
                {
                    b.Navigation("Membri");
                });
#pragma warning restore 612, 618
        }
    }
}
